import * as tslib_1 from "tslib";
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Overlay, DROP_IN_TYPE, Modal as Modal_ } from 'ngx-modialog';
import { JSNativePresetBuilder } from './presets/js-native-preset';
var Modal = /** @class */ (function (_super) {
    tslib_1.__extends(Modal, _super);
    /**
     * @param {?} overlay
     */
    function Modal(overlay) {
        return _super.call(this, overlay) || this;
    }
    /**
     * @return {?}
     */
    Modal.prototype.alert = function () {
        return new JSNativePresetBuilder(this, DROP_IN_TYPE.alert);
    };
    /**
     * @return {?}
     */
    Modal.prototype.prompt = function () {
        return new JSNativePresetBuilder(this, DROP_IN_TYPE.prompt);
    };
    /**
     * @return {?}
     */
    Modal.prototype.confirm = function () {
        return new JSNativePresetBuilder(this, DROP_IN_TYPE.confirm);
    };
    /**
     * @param {?} dialogRef
     * @param {?} type
     * @return {?}
     */
    Modal.prototype.create = function (dialogRef, type) {
        return dialogRef;
    };
    return Modal;
}(Modal_));
export { Modal };
Modal.decorators = [
    { type: Injectable },
];
/** @nocollapse */
Modal.ctorParameters = function () { return [
    { type: Overlay, },
]; };
function Modal_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    Modal.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    Modal.ctorParameters;
}
//# sourceMappingURL=modal.js.map
