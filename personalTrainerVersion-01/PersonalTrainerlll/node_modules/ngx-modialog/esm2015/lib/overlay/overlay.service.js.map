{
  "version": 3,
  "file": "overlay.service.js",
  "sources": [
    "ng://ngx-modialog/projects/ngx-modialog/src/lib/overlay/overlay.service.ts"
  ],
  "sourcesContent": [
    "import { ViewContainerRef, Injectable, Injector } from '@angular/core';\n\nimport { OverlayRenderer, OverlayConfig } from '../models/tokens';\nimport { DialogRefStack } from '../models/dialog-ref-stack';\nimport { vcRefStore } from '../models/vc-ref-store';\nimport { DialogRef } from '../models/dialog-ref';\nimport { OverlayContext } from '../models/overlay-context';\n\nconst _stack = new DialogRefStack<any>();\n\n@Injectable()\nexport class Overlay {\n  get stackLength(): number {\n    return _stack.length;\n  }\n\n  constructor(private _modalRenderer: OverlayRenderer, protected injector: Injector) {\n  }\n\n  /**\n   * Check if a given DialogRef is the top most ref in the stack.\n   * TODO: distinguish between body modal vs in element modal.\n   * @param dialogRef\n   */\n  isTopMost(dialogRef: DialogRef<any>): boolean {\n    return _stack.indexOf(dialogRef) === _stack.length - 1;\n  }\n\n  stackPosition(dialogRef: DialogRef<any>) {\n    return _stack.indexOf(dialogRef);\n  }\n\n  groupStackLength(dialogRef: DialogRef<any>): number {\n    return _stack.groupLength(_stack.groupOf(dialogRef));\n  }\n\n  closeAll(result: any = null): void {\n      _stack.closeAll(result);\n  }\n\n  /**\n   * Creates an overlay and returns a dialog ref.\n   * @param config instructions how to create the overlay\n   * @param group A token to associate the new overlay with, used for reference (stacks usually)\n   */\n  open<T extends OverlayContext>(config: OverlayConfig, group?: any): DialogRef<T>[] {\n    let viewContainer = config.viewContainer,\n        containers: Array<ViewContainerRef> = [];\n\n    if (typeof viewContainer === 'string') {\n      containers = vcRefStore.getVCRef(viewContainer as string);\n    } else if (Array.isArray(viewContainer)) {\n      containers = viewContainer as any;\n    } else if (viewContainer) {\n      containers = [viewContainer] as any;\n    } else {\n      containers = [null];\n    }\n\n    return containers\n      .map( vc => this.createOverlay(config.renderer || this._modalRenderer, vc, config, group));\n  }\n\n  private createOverlay(renderer: OverlayRenderer,\n                        vcRef: ViewContainerRef,\n                        config: OverlayConfig,\n                        group: any): DialogRef<any> {\n\n    if (config.context) {\n      config.context.normalize();\n    }\n\n    if (!config.injector) {\n      config.injector = this.injector;\n    }\n\n    let dialog = new DialogRef<any>(this, config.context || {});\n    dialog.inElement = config.context && !!config.context.inElement;\n\n    let cmpRef = renderer.render(dialog, vcRef, config.injector);\n\n    Object.defineProperty(dialog, 'overlayRef', {value: cmpRef});\n    _stack.pushManaged(dialog, group);\n\n    return dialog;\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
