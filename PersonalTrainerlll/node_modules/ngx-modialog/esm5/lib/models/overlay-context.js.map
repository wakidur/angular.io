{
  "version": 3,
  "file": "overlay-context.js",
  "sources": [
    "ng://ngx-modialog/projects/ngx-modialog/src/lib/models/overlay-context.ts"
  ],
  "sourcesContent": [
    "import { FluentAssign, FluentAssignMethod } from './../framework/fluent-assign';\nimport { extend, arrayUnion } from './../framework/utils';\nimport { DialogRef } from './dialog-ref';\nimport { WideVCRef, OverlayConfig } from './tokens';\n\nexport const DEFAULT_VALUES = {\n  inElement: false,\n  isBlocking: true,\n  keyboard: [27],\n  supportsKey: function supportsKey(keyCode: number): boolean {\n    return (<Array<number>>this.keyboard).indexOf(keyCode) > -1;\n  }\n};\n\nconst DEFAULT_SETTERS = [\n  'inElement',\n  'isBlocking',\n  'keyboard'\n];\n\nexport class OverlayContext {\n  /**\n   * Describes if the modal is rendered within the container element.\n   * The container element is the ViewContainerRef supplied.\n   * Defaults to false.\n   */\n  inElement: boolean;\n\n  /**\n   * Describes if the modal is blocking modal.\n   * A Blocking modal is not closable by clicking outside of the modal window.\n   * Defaults to false.\n   */\n  isBlocking: boolean;\n\n  /**\n   * Keyboard value/s that close the modal.\n   * Accepts either a single numeric value or an array of numeric values.\n   * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n   * Defaults to 27, set `null` implicitly to disable.\n   */\n  keyboard: Array<number> | number;\n\n  normalize(): void {\n    if (this.isBlocking !== false)\n      this.isBlocking = true;\n\n    if (this.keyboard === null) {\n      this.keyboard = [];\n    } else if (typeof this.keyboard === 'number') {\n      this.keyboard = [<number>this.keyboard];\n    } else if (!Array.isArray(<Array<number>>this.keyboard)) {\n      this.keyboard = DEFAULT_VALUES.keyboard;\n    }\n  }\n}\n\n/**\n * A core context builder for a modal window instance, used to define the context upon\n * a modal choose it's behaviour.\n */\nexport class OverlayContextBuilder<T extends OverlayContext> extends FluentAssign<T> {\n  /**\n   * Describes if the modal is rendered within the container element.\n   * The container element is the ViewContainerRef supplied.\n   * Defaults to false.\n   */\n  inElement: FluentAssignMethod<boolean, this>;\n\n  /**\n   * Describes if the modal is blocking modal.\n   * A Blocking modal is not closable by clicking outside of the modal window.\n   * Defaults to false.\n   */\n  isBlocking: FluentAssignMethod<boolean, this>;\n\n  /**\n   * Keyboard value/s that close the modal.\n   * Accepts either a single numeric value or an array of numeric values.\n   * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n   * Defaults to 27, set `null` implicitly to disable.\n   */\n  keyboard: FluentAssignMethod<Array<number> | number, this>;\n\n\n  constructor(defaultValues: T | T[] = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    super(\n      extend<any>(DEFAULT_VALUES, defaultValues || {}),\n      arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n      baseType || <any>OverlayContext // https://github.com/Microsoft/TypeScript/issues/7234\n    );\n  }\n\n  /**\n   * Returns an new OverlayConfig with a context property representing the data in this builder.\n   * @param base A base configuration that the result will extend\n   */\n  toOverlayConfig(base?: OverlayConfig): OverlayConfig {\n    return extend(base || {}, {\n      context: this.toJSON()\n    });\n  }\n}\n\nexport interface ModalControllingContextBuilder<T> {\n  open(viewContainer?: WideVCRef): DialogRef<T>;\n}\n\n/**\n * A helper to create an `OverlayConfig` on the fly.\n * Since `OverlayConfig` requires context it means a builder is needed, this process had some boilerplate.\n * When a quick, on the fly overlay config is needed use this helper to avoid that boilerplate.\n *\n * A builder is used as an API to allow setting the context and providing some operations around the modal.\n * When a developers knows the context before hand we can skip this step, this is what this factory is for.\n *\n * @param context The context for the modal\n * @param baseContextType Optional. The type/class of the context. This is the class used to init a new instance of the context\n * @param baseConfig A base configuration that the result will extend\n */\nexport function overlayConfigFactory<T>(context: T, baseContextType?: any, baseConfig?: OverlayConfig): OverlayConfig {\n  return new OverlayContextBuilder<T & OverlayContext>(<any>context, undefined, baseContextType).toOverlayConfig(baseConfig);\n}\n"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,EAAE,YAAY,EAAsB,MAAM,8BAA8B,CAAC;AAChF,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAI1D,MAAM,CAAC,uBAAM,cAAc,GAAG;IAC5B,SAAS,EAAE,KAAK;IAChB,UAAU,EAAE,IAAI;IAChB,QAAQ,EAAE,CAAC,EAAE,CAAC;IACd,WAAW,EAAE,qBAAqB,OAAe;QAC/C,MAAM,CAAC,mBAAgB,IAAI,CAAC,QAAQ,EAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;KAC7D;CACF,CAAC;AAEF,uBAAM,eAAe,GAAG;IACtB,WAAW;IACX,YAAY;IACZ,UAAU;CACX,CAAC;AAEF,MAAM;;;;IAuBJ,SAAS;QACP,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,mBAAS,IAAI,CAAC,QAAQ,EAAC,CAAC;SACzC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,mBAAgB,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;SACzC;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMD,MAAM,4BAAuD,SAAQ,YAAe;;;;;;IAwBlF,YAAY,gBAAyB,SAAS,EAClC,iBAA2B,SAAS,EACpC,WAAwB,SAAS;QAC3C,KAAK,CACH,MAAM,CAAM,cAAc,EAAE,aAAa,IAAI,EAAE,CAAC,EAChD,UAAU,CAAS,eAAe,EAAE,cAAc,IAAI,EAAE,CAAC,EACzD,QAAQ,sBAAS,cAAc,CAAC,sDAAsD;SAAvD;SAChC,CAAC;KACH;;;;;;IAMD,eAAe,CAAC,IAAoB;QAClC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE;YACxB,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE;SACvB,CAAC,CAAC;KACJ;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBD,MAAM,+BAAkC,OAAU,EAAE,eAAqB,EAAE,UAA0B;IACnG,MAAM,CAAC,IAAI,qBAAqB,mBAA0B,OAAO,GAAE,SAAS,EAAE,eAAe,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;CAC5H"
}
