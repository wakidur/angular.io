{
  "version": 3,
  "file": "dialog-preset.js",
  "sources": [
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/presets/dialog-preset.ts"
  ],
  "sourcesContent": [
    "import { Type } from '@angular/core';\nimport {\n  FluentAssignMethod,\n  privateKey,\n  extend,\n  arrayUnion\n} from 'ngx-modialog';\nimport { VEXModalContext, VEXModalContextBuilder } from '../modal-context';\nimport { Modal } from '../modal';\nimport {\n  DialogFormModal as component,\n  VEXButtonHandler,\n  VEXButtonConfig\n} from '../dialog-form-modal';\n\n\nconst DEFAULT_SETTERS = [\n  'content'\n];\n\n/**\n * Data definition\n */\nexport class DialogPreset extends VEXModalContext {\n  defaultResult: any;\n  content: Type<any>;\n  buttons: VEXButtonConfig[];\n  showInput: any;\n}\n\n/**\n * A Preset representing the configuration needed to open MessageModal.\n * This is an abstract implementation with no concrete behaviour.\n * Use derived implementation.\n */\nexport class DialogPresetBuilder<T extends DialogPreset>\nextends VEXModalContextBuilder<T> {\n  /**\n   * the message to display on the modal.\n   */\n  content: FluentAssignMethod<Type<any>, this>;\n\n  constructor(modal: Modal,\n              defaultValues: T = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    super(\n      extend<any>({modal, component, buttons: [], defaultResult: true}, defaultValues || {}),\n      arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n      baseType || <any>DialogPreset // https://github.com/Microsoft/TypeScript/issues/7234\n    );\n  }\n\n  addButton(css: string, caption: string, onClick: VEXButtonHandler): this {\n    let btn = {\n      cssClass: css,\n      caption: caption,\n      onClick: onClick\n    };\n\n    let key = privateKey('buttons');\n    (this[key] as VEXButtonConfig[]).push(btn);\n\n    return this;\n  }\n\n  addOkButton(text: string = 'OK'): this {\n    this.addButton(\n      'vex-dialog-button-primary vex-dialog-button vex-first',\n      text,\n      (cmp: component, $event: MouseEvent) => cmp.dialog.close(cmp.dialog.context.defaultResult)\n    );\n    return this;\n  }\n\n  addCancelButton(text: string = 'CANCEL'): this {\n    this.addButton(\n      'vex-dialog-button-secondary vex-dialog-button vex-last',\n      text,\n      (cmp: component, $event: MouseEvent) => cmp.dialog.dismiss()\n    );\n    return this;\n  }\n}\n"
  ],
  "names": [],
  "mappings": ";;;;AACA,OAAO,EAEL,UAAU,EACV,MAAM,EACN,UAAU,EACX,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,eAAe,EAAE,sBAAsB,EAAE,MAAM,kBAAkB,CAAC;AAE3E,OAAO,EACL,eAAe,IAAI,SAAS,EAG7B,MAAM,sBAAsB,CAAC;AAG9B,uBAAM,eAAe,GAAG;IACtB,SAAS;CACV,CAAC;;;;AAKF,MAAM,mBAAoB,SAAQ,eAAe;CAKhD;;;;;;;;;;;;;;;;;;AAOD,MAAM,0BACN,SAAQ,sBAAyB;;;;;;;IAM/B,YAAY,KAAY,EACZ,gBAAmB,SAAS,EAC5B,iBAA2B,SAAS,EACpC,WAAwB,SAAS;QAC3C,KAAK,CACH,MAAM,CAAM,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAC,EAAE,aAAa,IAAI,EAAE,CAAC,EACtF,UAAU,CAAS,eAAe,EAAE,cAAc,IAAI,EAAE,CAAC,EACzD,QAAQ,sBAAS,YAAY,CAAC,sDAAsD;SAAvD;SAC9B,CAAC;KACH;;;;;;;IAED,SAAS,CAAC,GAAW,EAAE,OAAe,EAAE,OAAyB;QAC/D,qBAAI,GAAG,GAAG;YACR,QAAQ,EAAE,GAAG;YACb,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SACjB,CAAC;QAEF,qBAAI,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QAChC,mBAAC,IAAI,CAAC,GAAG,CAAsB,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE3C,MAAM,CAAC,IAAI,CAAC;KACb;;;;;IAED,WAAW,CAAC,OAAe,IAAI;QAC7B,IAAI,CAAC,SAAS,CACZ,uDAAuD,EACvD,IAAI,EACJ,CAAC,GAAc,EAAE,MAAkB,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAC3F,CAAC;QACF,MAAM,CAAC,IAAI,CAAC;KACb;;;;;IAED,eAAe,CAAC,OAAe,QAAQ;QACrC,IAAI,CAAC,SAAS,CACZ,wDAAwD,EACxD,IAAI,EACJ,CAAC,GAAc,EAAE,MAAkB,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAC7D,CAAC;QACF,MAAM,CAAC,IAAI,CAAC;KACb;CACF"
}
