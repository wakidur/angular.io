{
  "version": 3,
  "file": "ngx-modialog-plugins-vex.js",
  "sources": [
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/vex.module.ts",
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/modal.ts",
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/vex-css-dialog-container.ts",
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/presets/dropin-preset.ts",
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/presets/dialog-preset.ts",
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/modal-context.ts",
    "ng://ngx-modialog/plugins/vex/projects/plugins/vex/src/lib/dialog-form-modal.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ModalModule, Modal as BaseModal } from 'ngx-modialog';\n\nimport { Modal } from './modal';\nimport { DialogFormModal, FormDropIn, VEXDialogButtons } from './dialog-form-modal';\nimport { VexCSSDialogContainer } from './vex-css-dialog-container';\n\nexport const providers: any[] = [\n  { provide: BaseModal, useClass: Modal },\n  { provide: Modal, useClass: Modal }\n];\n\n@NgModule({\n  imports: [ ModalModule, CommonModule ],\n  declarations: [\n    VexCSSDialogContainer,\n    VEXDialogButtons,\n    FormDropIn,\n    DialogFormModal\n  ],\n  providers,\n  entryComponents: [\n    VexCSSDialogContainer,\n    DialogFormModal,\n    FormDropIn\n  ]\n})\nexport class VexModalModule {\n\n  static getProviders(): any[] {\n    return providers;\n  }\n\n}\n",
    "import { Observable, combineLatest } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  ContainerContent,\n  Overlay,\n  DialogRef,\n  DROP_IN_TYPE,\n  Modal as Modal_,\n  CSSBackdrop,\n  CSSDialogContainer,\n  PromiseCompleter\n} from 'ngx-modialog';\n\nimport { DropInPresetBuilder } from './presets/dropin-preset';\nimport { VexCSSDialogContainer } from './vex-css-dialog-container';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst isDoc: boolean = !(typeof document === 'undefined' || !document);\n\nlet vexV3 = false;\n/**\n * Execute this method to flag that you are working with VEX version 3.\n */\nexport function vexV3Mode(): void {\n  vexV3 = true;\n}\n\n@Injectable()\nexport class Modal extends Modal_ {\n  constructor(overlay: Overlay) {\n    super(overlay);\n  }\n\n  alert(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.alert, {isBlocking: false} as any);\n  }\n\n  prompt(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.prompt, {\n      isBlocking: true,\n      keyboard: null\n    }  as any);\n  }\n\n  confirm(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.confirm, {\n      isBlocking: true,\n      keyboard: null\n    }  as any);\n  }\n\n  protected create(dialogRef: DialogRef<any>, content: ContainerContent): DialogRef<any> {\n    if (vexV3 === true) {\n      return this.createV3(dialogRef, content);\n    }\n\n    const backdropRef = this.createBackdrop(dialogRef, CSSBackdrop);\n    const containerRef = this.createContainer(dialogRef, VexCSSDialogContainer, content);\n\n    let overlay = dialogRef.overlayRef.instance;\n    let backdrop = backdropRef.instance;\n    let container = containerRef.instance;\n\n    if (dialogRef.inElement) {\n      overlay.insideElement();\n\n      overlay.setContainerStyle('position', 'relative')\n        .setContainerStyle('height', '100%')\n        .setContainerStyle('width', '100%');\n\n      backdrop.setStyle('position', 'absolute')\n        .setStyle('display', 'block')\n        .setStyle('height', '100%')\n        .setStyle('width', '100%');\n\n      container.setStyle('position', 'relative')\n        .setStyle('display', 'block')\n        .setStyle('height', '100%')\n        .setStyle('width', '100%');\n\n    } else {\n      overlay.fullscreen();\n    }\n\n    // add body class if this is the only dialog in the stack\n    if (isDoc && !document.body.classList.contains('vex-open')) {\n      document.body.classList.add('vex-open');\n    }\n\n    backdrop.addClass('vex-overlay');\n    container.addClass(`vex vex-theme-${dialogRef.context.className}`);\n\n    container.setStyle('display', 'block');\n\n    if (containerRef.location.nativeElement) {\n      containerRef.location.nativeElement.focus();\n    }\n\n    overlay.beforeDestroy(() => {\n      backdrop.addClass('vex-closing');\n      container.addClass('vex-closing');\n      const completer = new PromiseCompleter<void>();\n\n      let animationEnd$: Observable<any> = backdrop.myAnimationEnd$();\n\n      // TODO: the child element inside the container (vex-content) is the one with animation\n      // need to also wait for it to end, but this requires a reference to to it.\n      // the container itself is its parent, won't do.\n      // animationEnd$ = combineLatest.call(animationEnd$, container.myAnimationEnd$(), (s1, s2) => [s1,s2] );\n\n      animationEnd$.subscribe( sources => {\n        isDoc && this.overlay.groupStackLength(dialogRef) === 1 && document.body.classList.remove('vex-open');\n        completer.resolve();\n      });\n\n      return completer.promise;\n    });\n\n    container.apply(overlay);\n\n    return dialogRef;\n  }\n\n  private createV3(dialogRef: DialogRef<any>, content: ContainerContent): DialogRef<any> {\n\n    const backdropRef = this.createBackdrop(dialogRef, CSSBackdrop);\n    const containerRef = this.createContainer(dialogRef, CSSDialogContainer, content);\n\n    let overlay = dialogRef.overlayRef.instance;\n    let backdrop = backdropRef.instance;\n    let container = containerRef.instance;\n\n    dialogRef.inElement ? overlay.insideElement() : overlay.fullscreen();\n\n    // add body class if this is the only dialog in the stack\n    if (isDoc && !document.body.classList.contains('vex-open')) {\n      document.body.classList.add('vex-open');\n    }\n\n    overlay.addClass(`vex vex-theme-${dialogRef.context.className}`);\n    backdrop.addClass('vex-overlay');\n    container.addClass(dialogRef.context.contentClassName);\n    container.setStyle('display', 'block');\n    if (dialogRef.inElement) {\n      overlay.setStyle('padding', '0');\n      container.setStyle('margin-top', '20px');\n    }\n\n    if (containerRef.location.nativeElement) {\n      containerRef.location.nativeElement.focus();\n    }\n\n    if (dialogRef.context.className === 'bottom-right-corner') {\n      overlay.setStyle('overflow-y', 'hidden');\n      container.setStyle('position', 'absolute');\n    }\n\n    overlay.beforeDestroy(() => {\n      overlay.addClass('vex-closing');\n      const completer = new PromiseCompleter<void>();\n\n      let animationEnd$: Observable<any> = container.myAnimationEnd$();\n      if (dialogRef.context.className !== 'bottom-right-corner') {\n        animationEnd$ = combineLatest.call(animationEnd$, backdrop.myAnimationEnd$(), (s1, s2) => [s1,s2] );\n      }\n\n      animationEnd$.subscribe( sources => {\n        isDoc && this.overlay.groupStackLength(dialogRef) === 1 && document.body.classList.remove('vex-open');\n        completer.resolve();\n      });\n\n      return completer.promise;\n    });\n\n\n    overlay.setClickBoundary(containerRef.location.nativeElement);\n\n    return dialogRef;\n  }\n}\n",
    "import { Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { CSSDialogContainer, ModalOverlay } from 'ngx-modialog';\n\n\n/**\n * A component that acts as a top level container for an open modal window.\n */\n@Component({\n  selector: 'css-dialog-container',\n  host: {\n    'tabindex': '-1',\n    'role': 'dialog'\n  },\n  encapsulation: ViewEncapsulation.None,\n  template: `<div #clickBoundary class=\"{{dialog.context.contentClassName}}\"><ng-content></ng-content></div>`\n})\nexport class VexCSSDialogContainer extends CSSDialogContainer {\n  /**\n   * The div that wraps the content of the modal, by default use the class `vex-content`\n   */\n  @ViewChild('clickBoundary', {read: ElementRef}) public vexContentContainer: ElementRef;\n\n\n  apply(overlay: ModalOverlay): void {\n    overlay.setClickBoundary(this.vexContentContainer.nativeElement);\n\n    if (this.dialog.inElement) {\n      this.setStyle('padding', '20px 0 0 0');\n\n\n      if (this.dialog.context.className === 'bottom-right-corner') {\n        this.setStyle('overflow-y', 'hidden');\n        this.renderer.setStyle(this.vexContentContainer.nativeElement, 'position', 'absolute');\n      }\n    }\n\n  }\n}\n",
    "import {\n  DROP_IN_TYPE,\n  FluentAssignMethod,\n  extend\n} from 'ngx-modialog';\nimport { Modal } from '../modal';\nimport { DialogFormModal as component, FormDropIn as content } from '../dialog-form-modal';\nimport { DialogPreset, DialogPresetBuilder } from './dialog-preset';\n\nconst DEFAULT_VALUES = {\n  component,\n  content,\n  okBtn: 'OK',\n  cancelBtn: 'Cancel'\n};\n\nconst DEFAULT_SETTERS = [\n  'okBtn',\n  'cancelBtn',\n  'placeholder'\n];\n\n/**\n * Data definition\n */\nexport class DropInPreset extends DialogPreset {\n\n  /**\n   * the message to display on the modal.\n   */\n  message: string;\n\n  /**\n   * OK button caption.\n   * Default: OK\n   * Set to false ('', undefined, null, false) to remove button.\n   */\n  okBtn: string;\n\n  /**\n   * Cancel button caption.\n   * Default: Cancel\n   * Set to false ('', undefined, null, false) to remove button.\n   */\n  cancelBtn: string;\n\n  /**\n   * A placeholder for the input element.\n   * Valid only for prompt modal.\n   */\n  placeholder: string;\n\n  dropInType: DROP_IN_TYPE;\n\n  get showInput(): boolean {\n    return this.dropInType === DROP_IN_TYPE.prompt;\n  }\n}\n\n/**\n * A Preset representing all 3 drop ins (alert, prompt, confirm)\n */\nexport class DropInPresetBuilder extends DialogPresetBuilder<DropInPreset> {\n\n  /**\n   * the message to display on the modal.\n   */\n  message: FluentAssignMethod<string, this>;\n\n  /**\n   * The default Ok button caption.\n   */\n  okBtn: FluentAssignMethod<string, this>;\n\n  /**\n   * The default Cancel button caption.\n   */\n  cancelBtn: FluentAssignMethod<string, this>;\n\n  /**\n   * A placeholder for the input element.\n   * Valid only for prompt modal.\n   */\n  placeholder: FluentAssignMethod<string, this>;\n\n  constructor(modal: Modal, dropInType: DROP_IN_TYPE, defaultValues: DropInPreset = undefined) {\n    super(\n      modal,\n      extend<any>(extend({modal, dropInType}, DEFAULT_VALUES), defaultValues || {}),\n      DEFAULT_SETTERS,\n      DropInPreset\n    );\n  }\n\n  $$beforeOpen(config: DropInPreset): void {\n    super.$$beforeOpen(config);\n\n    if (config.okBtn) {\n      this.addOkButton(config.okBtn);\n    }\n\n    switch (config.dropInType) {\n      case DROP_IN_TYPE.prompt:\n        config.defaultResult = undefined;\n        break;\n      case DROP_IN_TYPE.confirm:\n        if (config.cancelBtn) {\n          this.addCancelButton(config.cancelBtn);\n        }\n        break;\n    }\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport {\n  FluentAssignMethod,\n  privateKey,\n  extend,\n  arrayUnion\n} from 'ngx-modialog';\nimport { VEXModalContext, VEXModalContextBuilder } from '../modal-context';\nimport { Modal } from '../modal';\nimport {\n  DialogFormModal as component,\n  VEXButtonHandler,\n  VEXButtonConfig\n} from '../dialog-form-modal';\n\n\nconst DEFAULT_SETTERS = [\n  'content'\n];\n\n/**\n * Data definition\n */\nexport class DialogPreset extends VEXModalContext {\n  defaultResult: any;\n  content: Type<any>;\n  buttons: VEXButtonConfig[];\n  showInput: any;\n}\n\n/**\n * A Preset representing the configuration needed to open MessageModal.\n * This is an abstract implementation with no concrete behaviour.\n * Use derived implementation.\n */\nexport class DialogPresetBuilder<T extends DialogPreset>\nextends VEXModalContextBuilder<T> {\n  /**\n   * the message to display on the modal.\n   */\n  content: FluentAssignMethod<Type<any>, this>;\n\n  constructor(modal: Modal,\n              defaultValues: T = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    super(\n      extend<any>({modal, component, buttons: [], defaultResult: true}, defaultValues || {}),\n      arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n      baseType || <any>DialogPreset // https://github.com/Microsoft/TypeScript/issues/7234\n    );\n  }\n\n  addButton(css: string, caption: string, onClick: VEXButtonHandler): this {\n    let btn = {\n      cssClass: css,\n      caption: caption,\n      onClick: onClick\n    };\n\n    let key = privateKey('buttons');\n    (this[key] as VEXButtonConfig[]).push(btn);\n\n    return this;\n  }\n\n  addOkButton(text: string = 'OK'): this {\n    this.addButton(\n      'vex-dialog-button-primary vex-dialog-button vex-first',\n      text,\n      (cmp: component, $event: MouseEvent) => cmp.dialog.close(cmp.dialog.context.defaultResult)\n    );\n    return this;\n  }\n\n  addCancelButton(text: string = 'CANCEL'): this {\n    this.addButton(\n      'vex-dialog-button-secondary vex-dialog-button vex-last',\n      text,\n      (cmp: component, $event: MouseEvent) => cmp.dialog.dismiss()\n    );\n    return this;\n  }\n}\n",
    "import {\n  ModalOpenContext,\n  ModalOpenContextBuilder,\n  FluentAssignMethod,\n  privateKey,\n  extend,\n  arrayUnion\n} from 'ngx-modialog';\n\n\nconst DEFAULT_VALUES = {\n  className: <VEXBuiltInThemes>'default',\n  overlayClassName: 'vex-overlay',\n  contentClassName: 'vex-content',\n  closeClassName: 'vex-close'\n};\n\nconst DEFAULT_SETTERS = [\n  'className',\n  'overlayClassName',\n  'contentClassName',\n  'closeClassName',\n  'showCloseButton'\n];\n\nexport type VEXBuiltInThemes\n  = 'default' | 'os' | 'plain' | 'wireframe' | 'flat-attack' | 'top' | 'bottom-right-corner';\n\nexport class VEXModalContext extends ModalOpenContext {\n  /**\n   * Set the built in schema to use.\n   */\n  className: VEXBuiltInThemes;\n\n  overlayClassName: string;\n  contentClassName: string;\n  closeClassName: string;\n\n  showCloseButton: boolean;\n\n\n  normalize(): void {\n    if (!this.className) {\n      this.className = DEFAULT_VALUES.className;\n    }\n\n    if (!this.overlayClassName) {\n      this.overlayClassName = DEFAULT_VALUES.overlayClassName;\n    }\n\n    if (!this.contentClassName) {\n      this.contentClassName = DEFAULT_VALUES.contentClassName;\n    }\n\n    if (!this.closeClassName) {\n      this.closeClassName = DEFAULT_VALUES.closeClassName;\n    }\n\n    super.normalize();\n  }\n}\n\nexport class VEXModalContextBuilder<T extends VEXModalContext> extends ModalOpenContextBuilder<T> {\n  /**\n   * Set the built in schema to use.\n   */\n  className: FluentAssignMethod<VEXBuiltInThemes, this>;\n\n  overlayClassName: FluentAssignMethod<string, this>;\n  contentClassName: FluentAssignMethod<string, this>;\n  closeClassName: FluentAssignMethod<string, this>;\n\n  showCloseButton: FluentAssignMethod<boolean, this>;\n\n  constructor(defaultValues: T = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    super(\n      extend<any>(DEFAULT_VALUES, defaultValues || {}),\n      arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n      baseType || <any>VEXModalContext // https://github.com/Microsoft/TypeScript/issues/7234\n    );\n  }\n\n  /**\n   *\n   * @aliasFor isBlocking\n   */\n  overlayClosesOnClick(value: boolean): this {\n    this[privateKey('isBlocking')] = !value;\n    return this;\n  }\n}\n",
    "import {\n  Component,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport {\n  DialogRef,\n  ModalComponent\n} from 'ngx-modialog';\n\nimport { DialogPreset } from './presets/dialog-preset';\nimport { DropInPreset } from './presets/dropin-preset';\n\nexport interface VEXButtonHandler {\n  (cmp: ModalComponent<DialogPreset>, $event: MouseEvent): void;\n}\n\n/**\n * Interface for button definition\n */\nexport interface VEXButtonConfig {\n  cssClass: string;\n  caption: string;\n  onClick: VEXButtonHandler;\n}\n\nexport interface VEXButtonClickEvent {\n  btn: VEXButtonConfig;\n  $event: MouseEvent;\n}\n\n/**\n * A Dialog is a\n */\n@Component({\n  selector: 'vex-dialog-buttons',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vex-dialog-buttons\">\n    <button type=\"button\" \n         *ngFor=\"let btn of buttons;\"\n         [class]=\"btn.cssClass\"\n         (click)=\"onClick(btn, $event)\">{{btn.caption}}</button>\n</div>`\n})\nexport class VEXDialogButtons {\n\n  /**\n   * A collection of button configurations, each configuration is a button to display.\n   */\n  @Input() public buttons: VEXButtonConfig[];\n\n  /**\n   * Emitted when a button was clicked\n   */\n  @Output() public onButtonClick = new EventEmitter<VEXButtonClickEvent>();\n\n  onClick(btn: any, $event: MouseEvent) {\n    $event.stopPropagation();\n    this.onButtonClick.emit({btn, $event});\n  }\n}\n\n/**\n * A Dialog with customized buttons wrapped in a form.\n *\n */\n@Component({\n  selector: 'modal-dialog',\n  encapsulation: ViewEncapsulation.None,\n  template: `<form class=\"vex-dialog-form\">\n    <ng-container *ngComponentOutlet=\"context.content\"></ng-container>\n    <vex-dialog-buttons [buttons]=\"context.buttons\"\n                        (onButtonClick)=\"onButtonClick($event)\"></vex-dialog-buttons>\n</form>`\n})\nexport class DialogFormModal implements ModalComponent<DialogPreset> {\n  public context: DialogPreset;\n\n  constructor(public dialog: DialogRef<DialogPreset>) {\n    this.context = dialog.context;\n  }\n\n  onButtonClick($event: VEXButtonClickEvent) {\n    $event.btn.onClick(this, $event.$event);\n  }\n}\n\n@Component({\n  selector: 'drop-in-dialog',\n  encapsulation: ViewEncapsulation.None,\n  template:\n`<div class=\"vex-dialog-message\">{{context.message}}</div>\n <div *ngIf=\"context.showInput\" class=\"vex-dialog-input\">\n   <input #input\n          autofocus\n          name=\"vex\" \n          type=\"text\" \n          class=\"vex-dialog-prompt-input\"\n           (change)=\"context.defaultResult = input.value\" \n          placeholder=\"{{context.placeholder}}\">\n </div>\n <div *ngIf=\"context.showCloseButton\" \n      [class]=\"context.closeClassName\"\n      (click)=\"dialog.dismiss()\"></div>`\n})\nexport class FormDropIn implements ModalComponent<DropInPreset> {\n  public context: DropInPreset;\n\n  constructor(public dialog: DialogRef<DropInPreset>) {\n    this.context = dialog.context;\n  }\n}\n"
  ],
  "names": [
    "Modal",
    "BaseModal",
    "Modal_",
    "DEFAULT_VALUES",
    "DEFAULT_SETTERS",
    "content",
    "component"
  ],
  "mappings": "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"
}
