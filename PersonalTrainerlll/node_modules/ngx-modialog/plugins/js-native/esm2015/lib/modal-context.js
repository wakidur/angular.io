/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { DROP_IN_TYPE, ModalOpenContextBuilder, ModalOpenContext, arrayUnion } from 'ngx-modialog';
const /** @type {?} */ DEFAULT_SETTERS = [
    'promptDefault'
];
export class JSNativeModalContext extends ModalOpenContext {
    /**
     * @return {?}
     */
    normalize() {
        if (!this.message)
            this.message = '';
        if (this.dialogType === undefined)
            this.dialogType = DROP_IN_TYPE.alert;
    }
}
function JSNativeModalContext_tsickle_Closure_declarations() {
    /** @type {?} */
    JSNativeModalContext.prototype.promptDefault;
    /** @type {?} */
    JSNativeModalContext.prototype.dialogType;
}
// unsupported: template constraints.
/**
 * @template T
 */
export class JSNativeModalContextBuilder extends ModalOpenContextBuilder {
    /**
     * @param {?=} defaultValues
     * @param {?=} initialSetters
     * @param {?=} baseType
     */
    constructor(defaultValues = undefined, initialSetters = undefined, baseType = undefined) {
        super(defaultValues || /** @type {?} */ ({}), arrayUnion(DEFAULT_SETTERS, initialSetters || []), baseType || /** @type {?} */ (JSNativeModalContext));
    }
}
function JSNativeModalContextBuilder_tsickle_Closure_declarations() {
    /**
     * The default value for the prompt input
     * @type {?}
     */
    JSNativeModalContextBuilder.prototype.promptDefault;
}
//# sourceMappingURL=modal-context.js.map
